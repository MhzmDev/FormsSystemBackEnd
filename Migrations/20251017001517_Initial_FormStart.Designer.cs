// <auto-generated />
using System;
using DynamicForm.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DynamicForm.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251017001517_Initial_FormStart")]
    partial class Initial_FormStart
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DynamicForm.Models.Form", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FormId"));

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("FormId");

                    b.ToTable("Forms");

                    b.HasData(
                        new
                        {
                            FormId = 1,
                            CreatedBy = "النظام",
                            CreatedDate = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "الحقول الإلزامية",
                            IsActive = true,
                            Name = "نموذج البيانات الأساسية"
                        });
                });

            modelBuilder.Entity("DynamicForm.Models.FormField", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FieldId"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("FieldName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FieldType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Options")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("ValidationRules")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("FieldId");

                    b.HasIndex("FormId");

                    b.ToTable("FormFields");

                    b.HasData(
                        new
                        {
                            FieldId = 1,
                            DisplayOrder = 1,
                            FieldName = "id",
                            FieldType = "text",
                            FormId = 1,
                            IsActive = true,
                            IsRequired = true,
                            Label = "المعرف",
                            ValidationRules = "{\"type\":\"number\",\"readOnly\":true}"
                        },
                        new
                        {
                            FieldId = 2,
                            DisplayOrder = 2,
                            FieldName = "referenceNo",
                            FieldType = "text",
                            FormId = 1,
                            IsActive = true,
                            IsRequired = true,
                            Label = "رقم المرجع"
                        },
                        new
                        {
                            FieldId = 3,
                            DisplayOrder = 3,
                            FieldName = "customerName",
                            FieldType = "text",
                            FormId = 1,
                            IsActive = true,
                            IsRequired = true,
                            Label = "اسم العميل"
                        },
                        new
                        {
                            FieldId = 4,
                            DisplayOrder = 4,
                            FieldName = "phoneNumber",
                            FieldType = "text",
                            FormId = 1,
                            IsActive = true,
                            IsRequired = true,
                            Label = "رقم الهاتف",
                            ValidationRules = "{\"pattern\":\"^[0-9\\u002B\\\\-\\\\s]\\u002B$\"}"
                        },
                        new
                        {
                            FieldId = 5,
                            DisplayOrder = 5,
                            FieldName = "salary",
                            FieldType = "text",
                            FormId = 1,
                            IsActive = true,
                            IsRequired = true,
                            Label = "الراتب",
                            ValidationRules = "{\"type\":\"number\",\"min\":0}"
                        },
                        new
                        {
                            FieldId = 6,
                            DisplayOrder = 6,
                            FieldName = "monthlySpent",
                            FieldType = "text",
                            FormId = 1,
                            IsActive = true,
                            IsRequired = true,
                            Label = "الالتزامات الشهريه",
                            ValidationRules = "{\"type\":\"number\",\"min\":0}"
                        },
                        new
                        {
                            FieldId = 7,
                            DisplayOrder = 7,
                            FieldName = "status",
                            FieldType = "dropdown",
                            FormId = 1,
                            IsActive = true,
                            IsRequired = true,
                            Label = "الحالة",
                            Options = "[\"\\u062C\\u062F\\u064A\\u062F\",\"\\u0642\\u064A\\u062F \\u0627\\u0644\\u0645\\u0631\\u0627\\u062C\\u0639\\u0629\",\"\\u0645\\u0642\\u0628\\u0648\\u0644\",\"\\u0645\\u0631\\u0641\\u0648\\u0636\",\"\\u0645\\u0643\\u062A\\u0645\\u0644\"]"
                        },
                        new
                        {
                            FieldId = 8,
                            DisplayOrder = 8,
                            FieldName = "creationDate",
                            FieldType = "date",
                            FormId = 1,
                            IsActive = true,
                            IsRequired = true,
                            Label = "تاريخ الإنشاء",
                            ValidationRules = "{\"readOnly\":true}"
                        });
                });

            modelBuilder.Entity("DynamicForm.Models.FormSubmission", b =>
                {
                    b.Property<int>("SubmissionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubmissionId"));

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SubmittedBy")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("SubmissionId");

                    b.HasIndex("FormId");

                    b.ToTable("FormSubmissions");
                });

            modelBuilder.Entity("DynamicForm.Models.FormSubmissionValue", b =>
                {
                    b.Property<int>("ValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ValueId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<string>("FieldNameAtSubmission")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FieldTypeAtSubmission")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FieldValue")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<string>("LabelAtSubmission")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("OptionsAtSubmission")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("int");

                    b.HasKey("ValueId");

                    b.HasIndex("FieldId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("FormSubmissionValues");
                });

            modelBuilder.Entity("DynamicForm.Models.FormField", b =>
                {
                    b.HasOne("DynamicForm.Models.Form", "Form")
                        .WithMany("FormFields")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("DynamicForm.Models.FormSubmission", b =>
                {
                    b.HasOne("DynamicForm.Models.Form", "Form")
                        .WithMany("FormSubmissions")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("DynamicForm.Models.FormSubmissionValue", b =>
                {
                    b.HasOne("DynamicForm.Models.FormField", "FormField")
                        .WithMany("FormSubmissionValues")
                        .HasForeignKey("FieldId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("DynamicForm.Models.FormSubmission", "FormSubmission")
                        .WithMany("FormSubmissionValues")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormField");

                    b.Navigation("FormSubmission");
                });

            modelBuilder.Entity("DynamicForm.Models.Form", b =>
                {
                    b.Navigation("FormFields");

                    b.Navigation("FormSubmissions");
                });

            modelBuilder.Entity("DynamicForm.Models.FormField", b =>
                {
                    b.Navigation("FormSubmissionValues");
                });

            modelBuilder.Entity("DynamicForm.Models.FormSubmission", b =>
                {
                    b.Navigation("FormSubmissionValues");
                });
#pragma warning restore 612, 618
        }
    }
}
